debug: true

#server
server:
  tomcat:
    uri-encoding: UTF-8
  port: ${app.server.port}
  # 为了在研发期间能够及时发现contextPath引起的路径错乱这里增加context-path设置
  servlet:
    context-path: ${app.server.contextPath}
  # session:
  #  cookie:
  #    name: tx_webdemo

#javamelody
javamelody:
  enabled: true
  init-parameters:
    url-exclude-pattern: '(/webjars/.*|/css/.*|/images/.*|/fonts/.*|/js/.*)'
    # authorized-users: admin:pwd
    storage-directory: 'd:/logs/javamelody'
    # to change the default "/monitoring" path:
    # monitoring-path: /admin/performance
  
spring:
#  devtools:
#    restart: #开启热部署
#      enabled: true
#      additional-paths: src/main/java
  application:
    name: webdemo
  #http配置
  http:
    #替代：CharacterEncodingFilter
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  servlet:
    #替代： multipartResolver的实现
    multipart:
      enabled: true
      resolve-lazily: true
      #1M,0.5M
      file-size-threshold: 524288
      #单个文件的最大大小
      max-file-size: 10485760
      #单个请求的最大的大小,如果是同时上传多个文件,多个文件大小之和
      #50 * 1024 * 1024  52428800  50M
      max-request-size: 52428800
  #spring.aop配置
  aop:
    #是否支持@EnableAspectJAutoProxy，默认为: true
    auto: true
    #true为使用CGLIB代理，false为JDK代理，默认为false
    proxy-target-class: true
  #spring.datasource配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.p6spy.engine.spy.P6SpyDriver
    url: ${app.jdbc.url}
    username: ${app.jdbc.username}
    password: ${app.jdbc.password}
    druid:
      db-type: mysql
      # 指定启动连接池时，初始建立的连接数量 5
      initial-size: 5
      # 最大激活连接数
      max-active: 20
      # 指定连接池最小的空闲连接数量 5
      min-idle: 5
      # 指定连接池等待连接返回的最大等待时间，毫秒单位 60000
      max-wait: 60000
      aop-patterns: 
      - 'com.tx.local.*.service.*'
      log-abandoned: true
      validation-query: SELECT 1 FROM DUAL
      # 获取连接时候验证，会影响性能
      # validation-query有值时，test-on-borrow会默认为true.
      # spring.datasource.tomcat.test-on-borrow=
      # spring.datasource.tomcat.test-on-connect=
      # spring.datasource.tomcat.test-on-return=
      test-on-borrow: false
      test-on-return: false
      # 验证连接的有效性
      test-while-idle: true
      # 空闲连接回收的时间间隔，与test-while-idle一起使用，设置5分钟 60000,间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-open-prepared-statements: 50
      max-pool-prepared-statement-per-connection-size: 20
      # 一个连接在池中最小生存的时间，单位是毫秒 
      min-evictable-idle-time-millis: 300000
      # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 stat,wall,log4j
      filters: stat,wall
      # 是否启用StatFilter默认值true
      filter:
      #  slf4j:
      #    enabled: true
        wall:
          enabled: true
          db-type: mysql
          # 对被认为是攻击的SQL进行LOG.error输出
          log-violation: true
          # 对被认为是攻击的SQL抛出SQLExcepton
          throw-exception: true
          config:
            alter-table-allow: true
            truncate-allow: true
            drop-table-allow: true
            # 是否允许非以上基本语句的其他语句，缺省关闭，通过这个选项就能够屏蔽DDL。
            none-base-statement-allow: false
            # 检查UPDATE语句是否无where条件，这是有风险的，但不是SQL注入类型的风险
            update-where-none-check: true
            # SELECT ... INTO OUTFILE 是否允许，这个是mysql注入攻击的常见手段，缺省是禁止的
            select-into-outfile-allow: false
            # 是否允许调用Connection.getMetadata方法，这个方法调用会暴露数据库的表信息
            metadata-allow: true
      web-stat-filter:
        enabled: true
        url-pattern: '/*'
        exclusions: '*.js*,.css,*.gif,*.jpg,*.bmp,*.png,*.ico,/druid/*'
        #session统计功能
        session-stat-enable: true
        #最大session数
        session-stat-max-count: 100000
        # 配置principalSessionName，使得druid能够知道当前的session的用户是谁
        # principal-session-name: admin
        # 配置principalSessionName，使得druid能够知道当前的cookie的用户是谁
        # principal-cookie-name=admin
        # 置profileEnable能够监控单个url调用的sql列表。
        # profile-enable=true
      stat-view-servlet:
        enabled: true
        url-pattern: '/druid/*'
        # IP白名单(没有配置或者为空，则允许所有访问)
        # allow: 'localhost,127.0.0.1'
        # IP黑名单 (存在共同时，deny优先于allow)
        # deny: 配置路由ip?
        # login-username: admin
        # login-password: 123321qQ
        # 禁用HTML页面上的“Reset All”功能
        reset-enable: fals
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      # connection-properties: 'druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000'
  thymeleaf:
    cache: false
    #prefix需要以/结束，DefaultErrorViewResolver中的实现为"error/xxx"
    prefix: classpath:/templates/
    suffix: .html
    #mode: HTML5
    #encoding: UTF-8
    #content-type: text/html
  freemarker:
    allow-request-override: false
    allow-session-override: false
    cache: false
    charset: UTF-8
    check-template-location: true
    content-type: text/html; charset=utf-8
    expose-request-attributes: false
    expose-session-attributes: false
    expose-spring-macro-helpers: false
    settings:
      template_update_delay: 0
    #prefix:
    suffix: .ftl
    #template-loader-path: classpath:/templates/
    enabled: true
  redis:
    database: 0
    host: 120.24.75.25
    port: 6379
    password: pqy
    lettuce:
      pool:
        # 连接池最大连接数（使用负值表示没有限制） 默认 8
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
        max-wait: -1
        # 连接池中的最大空闲连接 默认 8
        max-idle: 8
        # 连接池中的最小空闲连接 默认 0
        min-idle: 0
  #jpa
  jpa:
    database-platform: org.hibernate.dialect.MySQL5Dialect
    show-sql: true
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

tx:
  core:
    mybatis:
        check-config-location: true
        mapper-locations:
        - 'classpath*:com/tx/local/**/*SqlMap.xml'
        config-location: classpath:context/mybatis-config.xml
        type-handlers-package: com.tx.core.mybatis.handler
        database-platform: org.hibernate.dialect.MySQL5Dialect
        # executor-type: 
        # type-aliases-package: 
        # type-aliases-super-type:
  component:
    persister:
      type: mybatis
    event:
      enable: true
    command:
      enable: true
    basicdata:
      enable: true
      table-auto-initialize: true
      base-packages: com.tx.local
    config:
      enable: true
      table-auto-initialize: true
    
