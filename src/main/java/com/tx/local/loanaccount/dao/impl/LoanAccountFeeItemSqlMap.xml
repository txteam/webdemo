<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="loanAccountFeeItem">

	<!-- auto generate default resultMap -->
	<resultMap id="loanAccountFeeItemMap" 
		type="com.tx.local.loanaccount.model.LoanAccountFeeItem">
	</resultMap>
	
	<!-- auto generate default find -->
	<select id="find" 
		parameterType="com.tx.local.loanaccount.model.LoanAccountFeeItem"
		resultMap="loanAccountFeeItemMap">
		SELECT 
				LAFI.id,
				LAFI.feeItem,
				LAFI.loanAccountId,
				LAFI.value
		  FROM LA_FEE_ITEM LAFI
		 WHERE
		<trim prefixOverrides="AND | OR">
			<if test="@com.tx.core.util.OgnlUtils@isNotEmpty(id)">  
	            AND LAFI.id = #{id}
	        </if>
		</trim>
	</select>
	
	<!-- auto generate default query -->
	<select id="query" 
		parameterType="java.util.Map"
		resultMap="loanAccountFeeItemMap">
		SELECT 
				LAFI.id,
				LAFI.feeItem,
				LAFI.loanAccountId,
				LAFI.value
		  FROM LA_FEE_ITEM LAFI
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="@com.tx.core.util.OgnlUtils@isNotEmpty(conditions)">
			<foreach collection="conditions" item="conditionTemp">
			<choose>  
		        <when test="conditionTemp.withoutValue">
		        	AND ${conditionTemp.column} ${conditionTemp.operator}
		        </when>
		        <when test="conditionTemp.foreach">  
		            AND ${conditionTemp.column} ${conditionTemp.operator} <foreach collection="conditionTemp.value" item="valueTemp" open="(" close=")" separator=",">#{valueTemp}</foreach>
		        </when>
		        <otherwise>  
		            AND ${conditionTemp.column} ${conditionTemp.operator} #{conditionTemp.value}
		        </otherwise>
			</choose>
			</foreach>
	        </if>
			<if test="@com.tx.core.util.OgnlUtils@isNotEmpty(id)">  
	            <![CDATA[ AND LAFI.id = #{id} ]]>
	        </if>			
			<if test="@com.tx.core.util.OgnlUtils@isNotEmpty(feeItem)">  
	            <![CDATA[ AND LAFI.feeItem = #{feeItem} ]]>
	        </if>			
			<if test="@com.tx.core.util.OgnlUtils@isNotEmpty(loanAccountId)">  
	            <![CDATA[ AND LAFI.loanAccountId = #{loanAccountId} ]]>
	        </if>			
			<if test="@com.tx.core.util.OgnlUtils@isNotEmpty(value)">  
	            <![CDATA[ AND LAFI.value = #{value} ]]>
	        </if>			
			<if test="@com.tx.core.util.OgnlUtils@isNotEmpty(excludeId)">
				<![CDATA[ AND LAFI.id <> #{excludeId} ]]>
			</if>
		</trim>
		<choose>  
	        <when test="@com.tx.core.util.OgnlUtils@isNotEmpty(orders)">  
	            ORDER BY <foreach collection="orders" item="orderTemp" separator=",">${orderTemp.column} ${orderTemp.direction}</foreach>
	        </when>
	        <otherwise>  
	            ORDER BY id DESC
	        </otherwise>  
	    </choose>
	</select>

	<!-- auto generate default count -->
	<select id="queryCount" 
		parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT COUNT(1)
		  FROM LA_FEE_ITEM LAFI
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="@com.tx.core.util.OgnlUtils@isNotEmpty(conditions)">
			<foreach collection="conditions" item="conditionTemp">
			<choose>  
		        <when test="conditionTemp.withoutValue">
		        	AND ${conditionTemp.column} ${conditionTemp.operator}
		        </when>
		        <when test="conditionTemp.foreach">  
		            AND ${conditionTemp.column} ${conditionTemp.operator} <foreach collection="conditionTemp.value" item="valueTemp" open="(" close=")" separator=",">#{valueTemp}</foreach>
		        </when>
		        <otherwise>  
		            AND ${conditionTemp.column} ${conditionTemp.operator} #{conditionTemp.value}
		        </otherwise>
			</choose>
			</foreach>
	        </if>
			<if test="@com.tx.core.util.OgnlUtils@isNotEmpty(id)">  
	            <![CDATA[ AND LAFI.id = #{id} ]]>
	        </if>			
			<if test="@com.tx.core.util.OgnlUtils@isNotEmpty(feeItem)">  
	            <![CDATA[ AND LAFI.feeItem = #{feeItem} ]]>
	        </if>			
			<if test="@com.tx.core.util.OgnlUtils@isNotEmpty(loanAccountId)">  
	            <![CDATA[ AND LAFI.loanAccountId = #{loanAccountId} ]]>
	        </if>			
			<if test="@com.tx.core.util.OgnlUtils@isNotEmpty(value)">  
	            <![CDATA[ AND LAFI.value = #{value} ]]>
	        </if>			
			<if test="@com.tx.core.util.OgnlUtils@isNotEmpty(excludeId)">
				<![CDATA[ AND LAFI.id <> #{excludeId} ]]>
			</if>
		</trim>
	</select>
	
	<!-- auto generate default insert -->
    <insert id="insert" 
		parameterType="com.tx.local.loanaccount.model.LoanAccountFeeItem">
		INSERT INTO LA_FEE_ITEM
		(
			id,
			feeItem,
			loanAccountId,
			value
		)
		VALUES
		(
			#{id},
			#{feeItem},
			#{loanAccountId},
			#{value}
		)
	</insert>
	
	<!-- auto generate default delete -->
	<delete id="delete" 
		parameterType="com.tx.local.loanaccount.model.LoanAccountFeeItem">
		DELETE FROM LA_FEE_ITEM  WHERE
		<trim prefixOverrides="AND | OR">
			<if test="@com.tx.core.util.OgnlUtils@isNotEmpty(id)">  
	            AND id = #{id}
	        </if>
		</trim>
	</delete>
	
	<!-- auto generate default update -->
	<update id="update"
	    parameterType="java.util.Map">  
	    UPDATE LA_FEE_ITEM
	    <trim prefix="SET" suffixOverrides=",">
			<if test="_parameter.containsKey('feeItem')">
	    		feeItem = #{feeItem,javaType=com.tx.local.basicdata.model.FeeItemEnum},
	    	</if>
			<if test="_parameter.containsKey('loanAccountId')">
	    		loanAccountId = #{loanAccountId,javaType=java.lang.String},
	    	</if>
			<if test="_parameter.containsKey('value')">
	    		value = #{value,javaType=java.lang.String},
	    	</if>
	    </trim>
	    WHERE
		<trim prefixOverrides="AND | OR">
			<if test="@com.tx.core.util.OgnlUtils@isNotEmpty(id)">  
	            AND id = #{id}
	        </if>
		</trim>
	</update> 

</mapper>